<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
          xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
          xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
          xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
          xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
          clockSkew="180">

    <ApplicationDefaults entityID="http://{{ ansible_default_ipv4.address }}:5000/shibboleth">

        <Sessions lifetime="28800"
                  timeout="3600"
                  relayState="ss:mem"
                  checkAddress="false"
                  handlerSSL="false"
                  cookieProps="http">

            <SSO entityID="https://idp.testshib.org/idp/shibboleth" ECP="true">
                SAML2 SAML1
            </SSO>

            <!-- SAML and local-only logout. -->
            <Logout>SAML2 Local</Logout>

            <Handler type="MetadataGenerator"
                     Location="/Metadata"
                     signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status"
                     Location="/Status"
                     acl="127.0.0.1 ::1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session"
                     Location="/Session"
                     showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed"
                     Location="/DiscoFeed"/>
        </Sessions>

        <Errors supportContact="root@localhost"
                helpLocation="/about.html"
                styleSheet="/shibboleth-sp/main.css"/>

{% for item in keystone_shib_idps %}
    {% set default_backing='metadata-{{ item.name }}.xml' %}
        <MetadataProvider type="XML"
                          uri="{{ item.metadata_uri }}"
                          backingFilePath="{{ item.metadata_file | default(default_backing) }}"
                          reloadInterval="{{ item.metadata_reload | default('1800')}}" />
{% endfor %}

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML"
                            validate="true"
                            reloadChanges="false"
                            path="attribute-map.xml"/>

        <AttributeResolver type="Query" subjectMatch="true"/>

        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <CredentialResolver type="File"
                            key="sp-key.pem"
                            certificate="sp-cert.pem"/>

    </ApplicationDefaults>

    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML"
                            validate="true"
                            path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML"
                      validate="true"
                      reloadChanges="false"
                      path="protocols.xml"/>

</SPConfig>
